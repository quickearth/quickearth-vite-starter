define(["./defaultValue-040c41f9","./Matrix3-f3e9d70a","./EllipsoidGeometry-35ffe948","./VertexFormat-848ec33d","./Math-8e567554","./Transforms-bf0664c5","./Matrix2-dd990207","./RuntimeError-3c5db370","./combine-6eb6e848","./ComponentDatatype-dd0b58d1","./WebGLConstants-f7267ced","./GeometryAttribute-716f70e8","./GeometryAttributes-52134c76","./GeometryOffsetAttribute-b6810db4","./IndexDatatype-eddea9c9"],(function(e,t,i,r,o,a,n,s,d,c,l,m,u,p,f){"use strict";function y(r){const o=e.defaultValue(r.radius,1),a={radii:new t.Cartesian3(o,o,o),stackPartitions:r.stackPartitions,slicePartitions:r.slicePartitions,vertexFormat:r.vertexFormat};this._ellipsoidGeometry=new i.EllipsoidGeometry(a),this._workerName="createSphereGeometry"}y.packedLength=i.EllipsoidGeometry.packedLength,y.pack=function(e,t,r){return i.EllipsoidGeometry.pack(e._ellipsoidGeometry,t,r)};const G=new i.EllipsoidGeometry,k={radius:void 0,radii:new t.Cartesian3,vertexFormat:new r.VertexFormat,stackPartitions:void 0,slicePartitions:void 0};return y.unpack=function(o,a,n){const s=i.EllipsoidGeometry.unpack(o,a,G);return k.vertexFormat=r.VertexFormat.clone(s._vertexFormat,k.vertexFormat),k.stackPartitions=s._stackPartitions,k.slicePartitions=s._slicePartitions,e.defined(n)?(t.Cartesian3.clone(s._radii,k.radii),n._ellipsoidGeometry=new i.EllipsoidGeometry(k),n):(k.radius=s._radii.x,new y(k))},y.createGeometry=function(e){return i.EllipsoidGeometry.createGeometry(e._ellipsoidGeometry)},function(t,i){return e.defined(i)&&(t=y.unpack(t,i)),y.createGeometry(t)}}));
