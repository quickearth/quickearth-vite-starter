define(["exports","./GeometryOffsetAttribute-d63c288d","./Transforms-f1816abc","./Cartesian2-716c2715","./ComponentDatatype-549ec0d3","./when-208fe5b0","./Check-d18af7c4","./GeometryAttribute-0ee94cf1","./GeometryAttributes-b0b294d8","./IndexDatatype-d9b71b2b","./Math-3ba16bed","./VertexFormat-24041ad5"],function(e,$,ee,te,ae,re,d,ie,ne,oe,me,c){"use strict";var se=new te.Cartesian3,ue=new te.Cartesian3,le=new te.Cartesian3,fe=new te.Cartesian3,de=new te.Cartesian3,l=new te.Cartesian3(1,1,1),ce=Math.cos,pe=Math.sin;function p(e){e=re.defaultValue(e,re.defaultValue.EMPTY_OBJECT);var t=re.defaultValue(e.radii,l),a=re.defaultValue(e.innerRadii,t),r=re.defaultValue(e.minimumClock,0),i=re.defaultValue(e.maximumClock,me.CesiumMath.TWO_PI),n=re.defaultValue(e.minimumCone,0),o=re.defaultValue(e.maximumCone,me.CesiumMath.PI),m=Math.round(re.defaultValue(e.stackPartitions,64)),s=Math.round(re.defaultValue(e.slicePartitions,64)),u=re.defaultValue(e.vertexFormat,c.VertexFormat.DEFAULT);if(s<3)throw new d.DeveloperError("options.slicePartitions cannot be less than three.");if(m<3)throw new d.DeveloperError("options.stackPartitions cannot be less than three.");this._radii=te.Cartesian3.clone(t),this._innerRadii=te.Cartesian3.clone(a),this._minimumClock=r,this._maximumClock=i,this._minimumCone=n,this._maximumCone=o,this._stackPartitions=m,this._slicePartitions=s,this._vertexFormat=c.VertexFormat.clone(u),this._offsetAttribute=e.offsetAttribute,this._workerName="createEllipsoidGeometry"}p.packedLength=2*te.Cartesian3.packedLength+c.VertexFormat.packedLength+7,p.pack=function(e,t,a){if(!re.defined(e))throw new d.DeveloperError("value is required");if(!re.defined(t))throw new d.DeveloperError("array is required");return a=re.defaultValue(a,0),te.Cartesian3.pack(e._radii,t,a),a+=te.Cartesian3.packedLength,te.Cartesian3.pack(e._innerRadii,t,a),a+=te.Cartesian3.packedLength,c.VertexFormat.pack(e._vertexFormat,t,a),a+=c.VertexFormat.packedLength,t[a++]=e._minimumClock,t[a++]=e._maximumClock,t[a++]=e._minimumCone,t[a++]=e._maximumCone,t[a++]=e._stackPartitions,t[a++]=e._slicePartitions,t[a]=re.defaultValue(e._offsetAttribute,-1),t};var t,C=new te.Cartesian3,y=new te.Cartesian3,h=new c.VertexFormat,_={radii:C,innerRadii:y,vertexFormat:h,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,offsetAttribute:void 0};p.unpack=function(e,t,a){if(!re.defined(e))throw new d.DeveloperError("array is required");t=re.defaultValue(t,0);var r=te.Cartesian3.unpack(e,t,C);t+=te.Cartesian3.packedLength;var i=te.Cartesian3.unpack(e,t,y);t+=te.Cartesian3.packedLength;var n=c.VertexFormat.unpack(e,t,h);t+=c.VertexFormat.packedLength;var o=e[t++],m=e[t++],s=e[t++],u=e[t++],l=e[t++],f=e[t++],t=e[t];return re.defined(a)?(a._radii=te.Cartesian3.clone(r,a._radii),a._innerRadii=te.Cartesian3.clone(i,a._innerRadii),a._vertexFormat=c.VertexFormat.clone(n,a._vertexFormat),a._minimumClock=o,a._maximumClock=m,a._minimumCone=s,a._maximumCone=u,a._stackPartitions=l,a._slicePartitions=f,a._offsetAttribute=-1===t?void 0:t,a):(_.minimumClock=o,_.maximumClock=m,_.minimumCone=s,_.maximumCone=u,_.stackPartitions=l,_.slicePartitions=f,_.offsetAttribute=-1===t?void 0:t,new p(_))},p.createGeometry=function(e){var t=e._radii;if(!(t.x<=0||t.y<=0||t.z<=0)){var a=e._innerRadii;if(!(a.x<=0||a.y<=0||a.z<=0)){var r=e._minimumClock,i=e._maximumClock,n=e._minimumCone,o=e._maximumCone,m=e._vertexFormat,s=e._slicePartitions+1,u=e._stackPartitions+1;(s=Math.round(s*Math.abs(i-r)/me.CesiumMath.TWO_PI))<2&&(s=2),(u=Math.round(u*Math.abs(o-n)/me.CesiumMath.PI))<2&&(u=2);var l=0,f=[n],d=[r];for(B=0;B<u;B++)f.push(n+B*(o-n)/(u-1));for(f.push(o),O=0;O<s;O++)d.push(r+O*(i-r)/(s-1));d.push(i);var c=f.length,p=d.length,C=0,y=1,h=a.x!==t.x||a.y!==t.y||a.z!==t.z,_=!1,v=!1,b=!1;h&&(y=2,0<n&&(_=!0,C+=s-1),o<Math.PI&&(v=!0,C+=s-1),(i-r)%me.CesiumMath.TWO_PI?(b=!0,C+=2*(u-1)+1):C+=1);var A=p*c*y,x=new Float64Array(3*A),w=$.arrayFill(new Array(A),!1),k=$.arrayFill(new Array(A),!1),P=s*u*y,F=oe.IndexDatatype.createTypedArray(P,6*(P+C+1-(s+u)*y)),g=m.normal?new Float32Array(3*A):void 0,V=m.tangent?new Float32Array(3*A):void 0,D=m.bitangent?new Float32Array(3*A):void 0,M=m.st?new Float32Array(2*A):void 0,T=new Array(c),E=new Array(c);for(B=0;B<c;B++)T[B]=pe(f[B]),E[B]=ce(f[B]);for(var G=new Array(p),L=new Array(p),O=0;O<p;O++)L[O]=ce(d[O]),G[O]=pe(d[O]);for(B=0;B<c;B++)for(O=0;O<p;O++)x[l++]=t.x*T[B]*L[O],x[l++]=t.y*T[B]*G[O],x[l++]=t.z*E[B];var I,z,N,R,U=A/2;if(h)for(B=0;B<c;B++)for(O=0;O<p;O++)x[l++]=a.x*T[B]*L[O],x[l++]=a.y*T[B]*G[O],x[l++]=a.z*E[B],w[U]=!0,0<B&&B!==c-1&&0!==O&&O!==p-1&&(k[U]=!0),U++;for(l=0,B=1;B<c-2;B++)for(I=B*p,z=(B+1)*p,O=1;O<p-2;O++)F[l++]=z+O,F[l++]=z+O+1,F[l++]=I+O+1,F[l++]=z+O,F[l++]=I+O+1,F[l++]=I+O;if(h)for(var S=c*p,B=1;B<c-2;B++)for(I=S+B*p,z=S+(B+1)*p,O=1;O<p-2;O++)F[l++]=z+O,F[l++]=I+O,F[l++]=I+O+1,F[l++]=z+O,F[l++]=I+O+1,F[l++]=z+O+1;if(h){if(_)for(R=c*p,B=1;B<p-2;B++)F[l++]=B,F[l++]=B+1,F[l++]=R+B+1,F[l++]=B,F[l++]=R+B+1,F[l++]=R+B;if(v)for(N=c*p-p,R=c*p*y-p,B=1;B<p-2;B++)F[l++]=N+B+1,F[l++]=N+B,F[l++]=R+B,F[l++]=N+B+1,F[l++]=R+B,F[l++]=R+B+1}if(b){for(B=1;B<c-2;B++)F[l++]=R=p*c+(N=p*B),F[l++]=N+p,F[l++]=N,F[l++]=R,F[l++]=R+p,F[l++]=N+p;for(B=1;B<c-2;B++)R=p*c+p*(B+1)-1,F[l++]=(N=p*(B+1)-1)+p,F[l++]=R,F[l++]=N,F[l++]=N+p,F[l++]=R+p,F[l++]=R}v=new ne.GeometryAttributes;m.position&&(v.position=new ie.GeometryAttribute({componentDatatype:ae.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:x}));var W=0,q=0,Y=0,J=0,X=A/2,Z=te.Ellipsoid.fromCartesian3(t),j=te.Ellipsoid.fromCartesian3(a);if(m.st||m.normal||m.tangent||m.bitangent){for(B=0;B<A;B++){var H,K=w[B]?j:Z,Q=te.Cartesian3.fromArray(x,3*B,se),Q=K.geodeticSurfaceNormal(Q,ue);k[B]&&te.Cartesian3.negate(Q,Q),m.st&&(H=te.Cartesian2.negate(Q,de),M[W++]=Math.atan2(H.y,H.x)/me.CesiumMath.TWO_PI+.5,M[W++]=Math.asin(Q.z)/Math.PI+.5),m.normal&&(g[q++]=Q.x,g[q++]=Q.y,g[q++]=Q.z),(m.tangent||m.bitangent)&&(H=0,w[B]&&(H=X),H=!_&&H<=B&&B<H+2*p?te.Cartesian3.UNIT_X:te.Cartesian3.UNIT_Z,te.Cartesian3.cross(H,Q,H=le),te.Cartesian3.normalize(H,H),m.tangent&&(V[Y++]=H.x,V[Y++]=H.y,V[Y++]=H.z),m.bitangent&&(H=te.Cartesian3.cross(Q,H,fe),te.Cartesian3.normalize(H,H),D[J++]=H.x,D[J++]=H.y,D[J++]=H.z))}m.st&&(v.st=new ie.GeometryAttribute({componentDatatype:ae.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:M})),m.normal&&(v.normal=new ie.GeometryAttribute({componentDatatype:ae.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:g})),m.tangent&&(v.tangent=new ie.GeometryAttribute({componentDatatype:ae.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:V})),m.bitangent&&(v.bitangent=new ie.GeometryAttribute({componentDatatype:ae.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:D}))}return re.defined(e._offsetAttribute)&&(y=x.length,b=new Uint8Array(y/3),y=e._offsetAttribute===$.GeometryOffsetAttribute.NONE?0:1,$.arrayFill(b,y),v.applyOffset=new ie.GeometryAttribute({componentDatatype:ae.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:b})),new ie.Geometry({attributes:v,indices:F,primitiveType:ie.PrimitiveType.TRIANGLES,boundingSphere:ee.BoundingSphere.fromEllipsoid(Z),offsetAttribute:e._offsetAttribute})}}},p.getUnitEllipsoid=function(){return t=!re.defined(t)?p.createGeometry(new p({radii:new te.Cartesian3(1,1,1),vertexFormat:c.VertexFormat.POSITION_ONLY})):t},e.EllipsoidGeometry=p});
//# sourceMappingURL=EllipsoidGeometry-ac5e2c9a.js.map
