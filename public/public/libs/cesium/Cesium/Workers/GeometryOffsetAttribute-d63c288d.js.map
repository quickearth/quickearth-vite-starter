{"version":3,"file":"GeometryOffsetAttribute-d63c288d.js","sources":["../../../../Source/Core/GeometryOffsetAttribute.js","../../../../Source/Core/arrayFill.js"],"sourcesContent":["/**\n * Represents which vertices should have a value of `true` for the `applyOffset` attribute\n * @private\n */\nvar GeometryOffsetAttribute = {\n  NONE: 0,\n  TOP: 1,\n  ALL: 2,\n};\nexport default Object.freeze(GeometryOffsetAttribute);\n","import Check from \"./Check.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\n\n/**\n * Fill an array or a portion of an array with a given value.\n *\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill the array with.\n * @param {Number} [start=0] The index to start filling at.\n * @param {Number} [end=array.length] The index to end stop at.\n *\n * @returns {Array} The resulting array.\n * @private\n */\nfunction arrayFill(array, value, start, end) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"array\", array);\n  Check.defined(\"value\", value);\n  if (defined(start)) {\n    Check.typeOf.number(\"start\", start);\n  }\n  if (defined(end)) {\n    Check.typeOf.number(\"end\", end);\n  }\n  //>>includeEnd('debug');\n\n  if (typeof array.fill === \"function\") {\n    return array.fill(value, start, end);\n  }\n\n  var length = array.length >>> 0;\n  var relativeStart = defaultValue(start, 0);\n  // If negative, find wrap around position\n  var k =\n    relativeStart < 0\n      ? Math.max(length + relativeStart, 0)\n      : Math.min(relativeStart, length);\n  var relativeEnd = defaultValue(end, length);\n  // If negative, find wrap around position\n  var last =\n    relativeEnd < 0\n      ? Math.max(length + relativeEnd, 0)\n      : Math.min(relativeEnd, length);\n\n  // Fill array accordingly\n  while (k < last) {\n    array[k] = value;\n    k++;\n  }\n  return array;\n}\nexport default arrayFill;\n"],"names":["Object","freeze","NONE","TOP","ALL","array","value","start","end","Check","defined","typeOf","number","fill","length","k","relativeStart","defaultValue","Math","max","min","last","relativeEnd"],"mappings":"qFAIA,MAKeA,OAAOC,OALQ,CAC5BC,KAAM,EACNC,IAAK,EACLC,IAAK,4CCQP,SAAmBC,EAAOC,EAAOC,EAAOC,GAYtC,GAVAC,QAAMC,QAAQ,QAASL,GACvBI,QAAMC,QAAQ,QAASJ,GACnBI,UAAQH,IACVE,QAAME,OAAOC,OAAO,QAASL,GAE3BG,UAAQF,IACVC,QAAME,OAAOC,OAAO,MAAOJ,GAIH,mBAAfH,EAAMQ,KACf,OAAOR,EAAMQ,KAAKP,EAAOC,EAAOC,GAkBlC,IAfA,IAAIM,EAAST,EAAMS,SAAW,EAG1BC,GAFAC,EAAgBC,eAAaV,EAAO,IAGtB,EACZW,KAAKC,IAAIL,EAASE,EAAe,GACjCE,KAAKE,IAAIJ,EAAeF,GAG1BO,GAFAC,EAAcL,eAAaT,EAAKM,IAGpB,EACVI,KAAKC,IAAIL,EAASQ,EAAa,GAC/BJ,KAAKE,IAAIE,EAAaR,GAGrBC,EAAIM,GACThB,EAAMU,GAAKT,EACXS,IAEF,OAAOV"}